name: Build Wheels (Linux + macOS)
on:
  push:
    branches: [ "pybind" ]
  pull_request:
    branches: [ "pybind" ]
jobs:
  build-wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # You can also do a matrix of Python versions, but typically
          # cibuildwheel itself will handle multiple Python versions inside Docker (on Linux).
          python-version: 3.11

      - name: Upgrade pip & install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel
      # ------------------------------------------
      # OS-Specific System Dependencies
      # ------------------------------------------
      # On Ubuntu, install packages via apt-get
      - name: Install deps (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfftw3-dev
      # On macOS, install packages via Homebrew
      - name: Install deps (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install fftw
      # ------------------------------------------
      # Build Wheels Using cibuildwheel
      # ------------------------------------------
      - name: Build Wheels (Linux)
        run: |
          # This will build wheels for all supported Python versions on the current OS.
          # By default, it runs a "pip wheel ." inside each Python interpreter environment.
          cibuildwheel --output-dir dist
      - name: Show built wheels
        run: ls -l dist

      - name: Test one of the built wheels
        run: |
          python -m pip install dist/*.whl
          python -c "import sgtsnepi; print('Imported sgtsnepi successfully!')"