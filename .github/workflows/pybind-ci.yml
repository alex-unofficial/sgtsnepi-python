name: Build (Linux Only)

on:
  push:
    branches: [ "pybind" ]
  pull_request:
    branches: [ "pybind" ]

jobs:
  build-linux-wheel:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8  # or whichever Python you want


      # Install system dependencies per OS (omitted here for brevity),
      - name: Install system dependencies (Ubuntu)
        # Only run this step if on ubuntu-latest
        # if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # apt names differ slightly from brew
          sudo apt-get install -y \
            meson \
            ninja-build \
            libtbb-dev \
            libflann-dev \
            libmetis-dev \
            libfftw3-dev \
            libfftw3-mpi-dev \
            liblz4-dev \
            doxygen       
            
      #- name: Build library
     #   run:  |
     #         mkdir external && cd external 
     #         git clone --branch julia-python-packages --depth 1 https://github.com/fcdimitr/sgtsnepi && cd sgtsnepi
     #         meson setup build && meson compile -C build
     #         cd ../..
     #         pip install .
              
      - name: Install build tools
        run: |
          # scikit-build-core includes scikit-build, pybind11 is for any pybind code, 
          # and 'build' is the CLI tool `python -m build`
             python -m pip install --upgrade pip
             python -m pip install --upgrade build scikit-build-core pybind11 ninja

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build manylinux wheels
        env:
          CIBW_BEFORE_BUILD: |
           # install FFTW dev headers; add any others you need: metis, lz4, etc.
           yum install -y fftw-devel lz4-devel tbb-devel flann-devel metis-devel
           python -m pip install --upgrade pip 
           python -m pip install meson ninja
           mkdir -p external &&
           cd external &&
           rm -rf sgtsnepi/
           git clone --branch julia-python-packages --depth 1 https://github.com/fcdimitr/sgtsnepi &&
           cd sgtsnepi &&
           meson setup build &&
           meson compile -C build &&
           cd ../..
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64:latest
          #CIBW_MUSLLINUX_X86_64_IMAGE: quay.io/pypa/musllinux_1_2_x86_64:latest
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-*"
          CIBW_PLATFORM: linux
        run: |
          # cibuildwheel by default builds wheels for all Python 3 versions
          # it finds inside the manylinux Docker images.
          cibuildwheel --platform linux --output-dir dist
          
      - name: Show built wheels
        run: ls -l dist

             
      #- name: Build the wheel
      #  run: |
      #    python -m build --wheel --no-isolation

      #- name: Show wheel in dist/
      #  run: ls -l dist
