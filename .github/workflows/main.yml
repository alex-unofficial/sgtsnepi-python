name: Build Wheels (Linux + macOS)
on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Build Wheels using cibuildwheel
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_BEFORE_BUILD_MACOS: "brew update && brew install fftw"
          CIBW_BEFORE_BUILD_LINUX: "yum install -y fftw-devel"
          CIBW_BEFORE_BUILD_WINDOWS: "git clone https://github.com/microsoft/vcpkg.git && cd vcpkg && .\\bootstrap-vcpkg.bat && .\\vcpkg.exe install fftw3:x64-windows"
          # git clone https://github.com/microsoft/vcpkg.git
          # cd vcpkg 
          # .\bootstrap-vcpkg.bat
          # vcpkg install fftw

          # Only build 64-bit manylinux wheels, skip musllinux
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_SKIP: "*-win32 *-musllinux_*"

          # Force a valid manylinux image (avoid date-based tags)
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux2014_x86_64:latest"

          # Force the wheel's minimum macOS version to 14.0
          MACOSX_DEPLOYMENT_TARGET: "14.0"
        with:
          output-dir: dist

      - name: Show built wheels
        run: ls -l dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          # We'll name each artifact distinctly, so we can download them all later
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: dist/*.whl

  publish:
    needs: [build-wheels]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    # Only publish on tag pushes: e.g. "v0.1.0"
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Show downloaded wheels
        run: ls -l dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
