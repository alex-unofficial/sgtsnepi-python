name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    # We'll run the same job on ubuntu-latest AND macos-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Ubuntu)
        # Only run this step if on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # apt names differ slightly from brew
          sudo apt-get install -y \
            meson \
            ninja-build \
            libtbb-dev \
            libflann-dev \
            libmetis-dev \
            libfftw3-dev \
            libfftw3-mpi-dev \
            liblz4-dev \
            doxygen

      - name: Install system dependencies (macOS)
        # Only run this step if on macos-latest
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          # Install native libs for meson, ninja, TBB, FLANN, METIS, FFTW, LZ4, etc.
          brew install meson ninja tbb flann metis fftw lz4 doxygen

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Python dependencies
        run: |
          # Installs your package in editable mode plus dev extras (flake8, etc.)
          python -m pip install .[dev]

      # Optional: Run lint checks here if desired
      # - name: Lint with flake8
      #   run: flake8 .

      - name: Build the wheel
        run: |
          python -m pip install --upgrade build wheel meson ninja
          python -m build --wheel --no-isolation

      - name: Smoke Test
        run: |
          # Create a small 4x4 symmetric matrix in MatrixMarket format
          echo "%%MatrixMarket matrix coordinate real symmetric" > test.mtx
          echo "4 4 4" >> test.mtx
          echo "1 2 1.0" >> test.mtx
          echo "2 3 2.0" >> test.mtx
          echo "3 4 3.0" >> test.mtx
          echo "4 1 4.0" >> test.mtx

          # Run the minimal demo test
          python tests/demo.py test.mtx 2

          echo "Test completed successfully on ${{ matrix.os }}!"
